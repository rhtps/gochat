package main

import (
	"github.com/stretchr/gomniauth/common"
	"github.com/stretchr/objx"
)

type User struct {
	name      string
	avatarUrl string
}

func NewBasicUser(name string, avatarUrl string) *User {

	user := &User{name, avatarUrl}

	return user
}

// Email gets the users email address.
func (u *User) Email() string {
	return ""
}

// Name gets the users full name.
func (u *User) Name() string {
	return u.name

}

// Nickname gets the users nickname or username.
func (u *User) Nickname() string {
	return u.name

}

// AvatarURL gets the URL of an image representing the user.
func (u *User) AvatarURL() string {
	return ""
}

// ProviderCredentials gets a map of Credentials (by provider name).
func (u *User) ProviderCredentials() map[string]*common.Credentials {
	return nil
}

// IDForProvider gets the ID value for the specified provider name for
// this user from the ProviderCredentials data.
func (u *User) IDForProvider(provider string) string {

	return ""
}

// AuthCode gets this user's globally unique ID (generated by the host program)
func (u *User) AuthCode() string {
	return ""
}

// GetValue gets any User field by name.
func (u *User) Data() objx.Map {
	return nil
}
